# Database Configuration
# Database type: 'sqlite' (default) or 'postgresql'
DB_TYPE=sqlite

# SQLite Configuration (used when DB_TYPE=sqlite)
SQLITE_PATH=/data/pollingplaces.db

# PostgreSQL Configuration (used when DB_TYPE=postgresql)
DB_USER=postgres
DB_PASSWORD=your_password_here
DB_HOST=localhost
DB_PORT=5432
DB_NAME=pollingplaces

# For Cloud SQL with Unix socket connection
# DB_HOST=/cloudsql/PROJECT_ID:REGION:INSTANCE_NAME

# Legacy configuration (deprecated, use the above settings instead)
# DATABASE_URL=sqlite:////data/pollingplaces.db

# Application Configuration
PORT=8080
DEBUG=False

# Authentication
# Secret key for Flask sessions (auto-generated if not provided)
SECRET_KEY=your-secret-key-here

# Default admin password on first run (change immediately after first login)
DEFAULT_ADMIN_PASSWORD=admin123

# Master API key for creating new API keys via API (optional, use admin interface instead)
# Example: python -c "import secrets; print(secrets.token_urlsafe(48))"
MASTER_API_KEY=your-secure-master-key-here

# Automated Scheduling
# Enable automatic syncing of all plugins
AUTO_SYNC_ENABLED=True
# Sync interval in hours (default: 24)
SYNC_INTERVAL_HOURS=24

# Google Cloud Configuration (for production)
# GOOGLE_CLOUD_PROJECT=your-project-id

# BigQuery Configuration
# BIGQUERY_QUERY_TEMPLATE: Custom SQL query template for BigQuery
# The template should contain {state_code} as a placeholder for the state code,and should return columns precinctcode and registered.
BIGQUERY_QUERY_TEMPLATE=your-query-template-here

# Geocoding API Keys (optional, for fallback geocoding)
# Google Geocoding API key (free tier: 40,000 requests/month)
GOOGLE_GEOCODING_API_KEY=your-google-api-key-here

# Mapbox Geocoding access token (free tier: 100,000 requests/month)
MAPBOX_ACCESS_TOKEN=your-mapbox-access-token-here
